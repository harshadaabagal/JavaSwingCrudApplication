/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.EmployeeProfile;
import model.EmployeeProfileRecordHistory;

/**
 *
 * @author Harshada
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    //Declaring variables
    EmployeeProfileRecordHistory empProfileHistory;
    EmployeeProfile empProfile;

    //Constructor 
    public CreateJPanel(EmployeeProfileRecordHistory empProfileHistory, EmployeeProfile empProfile) {
        initComponents();
        this.empProfileHistory = empProfileHistory;
        this.empProfile = empProfile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateTitle = new javax.swing.JLabel();
        lblEmpName = new javax.swing.JLabel();
        lblEmpID = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblPositionTitle = new javax.swing.JLabel();
        lblPhoneNo = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        txtEmpName = new javax.swing.JTextField();
        txtEmpID = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtPositionTitle = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtLevel = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnUploadPhoto = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCreateTitle.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblCreateTitle.setForeground(new java.awt.Color(51, 0, 153));
        lblCreateTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateTitle.setText("Create Employee");
        add(lblCreateTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 170, 32));

        lblEmpName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmpName.setText("Employee Name:");
        add(lblEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, 30));

        lblEmpID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmpID.setText("Employee ID:");
        add(lblEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 110, 30));

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAge.setText("Age:");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 90, 30));

        lblGender.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 70, 30));

        lblStartDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblStartDate.setText("Start Date:");
        add(lblStartDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 80, 30));

        lblLevel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLevel.setText("Level:");
        add(lblLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 80, 30));

        lblTeamInfo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTeamInfo.setText("Team Info:");
        add(lblTeamInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 90, 30));

        lblPositionTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPositionTitle.setText("Position Title: ");
        add(lblPositionTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 100, 30));

        lblPhoneNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPhoneNo.setText("Phone Number:");
        add(lblPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 100, 20));

        lblEmailAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmailAddress.setText("Email Address:");
        add(lblEmailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 110, 30));

        txtEmpName.setBackground(new java.awt.Color(255, 255, 234));
        add(txtEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 150, 30));

        txtEmpID.setBackground(new java.awt.Color(255, 255, 234));
        add(txtEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 150, 30));

        txtAge.setBackground(new java.awt.Color(255, 255, 234));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 150, 30));

        txtStartDate.setBackground(new java.awt.Color(255, 255, 234));
        add(txtStartDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 150, 30));

        txtPositionTitle.setBackground(new java.awt.Color(255, 255, 234));
        add(txtPositionTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 150, 30));

        txtPhoneNo.setBackground(new java.awt.Color(255, 255, 234));
        add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 150, 30));

        txtEmailAddress.setBackground(new java.awt.Color(255, 255, 234));
        add(txtEmailAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 150, 30));

        btnSave.setBackground(new java.awt.Color(204, 255, 153));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 204, 51));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus (1).png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 2));
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 110, 40));

        txtLevel.setBackground(new java.awt.Color(255, 255, 234));
        add(txtLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 150, 30));

        txtTeamInfo.setBackground(new java.awt.Color(255, 255, 234));
        add(txtTeamInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 150, 30));

        txtGender.setBackground(new java.awt.Color(255, 255, 234));
        add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 150, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Photo:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 90, 20));

        btnUploadPhoto.setBackground(new java.awt.Color(255, 255, 234));
        btnUploadPhoto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUploadPhoto.setText("Upload");
        btnUploadPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadPhotoActionPerformed(evt);
            }
        });
        add(btnUploadPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, 150, 30));
        add(lblPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 270, 100, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String inputValidation;
        EmployeeProfile profile = new EmployeeProfile();
                //= empProfileHistory.addNewRecords();
        int flag = 0;

        //Employee Name Validation
        inputValidation = txtEmpName.getText().trim();
        if (inputValidation.length() < 2 || inputValidation.isEmpty() || inputValidation.matches("^(?=.{2,20}$)([A-Z]([a-z]*))+(\\s+([A-Z]([a-z]*)))*$") || !inputValidation.chars().allMatch(Character::isLetter)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Name consisting of all characters and not more than 20 letters");
            return;
        }

        //Employee ID validation
        inputValidation = txtEmpID.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.equals("0") || !(inputValidation.chars().allMatch(Character::isDigit))) {

            JOptionPane.showMessageDialog(this, "Please enter a valid Employee ID consisting of numbers only");
            return;
        }

        //Age validation
        inputValidation = txtAge.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.length() < 2 || Integer.parseInt(inputValidation) <= 20 || Integer.parseInt(inputValidation) >= 65 || !inputValidation.chars().allMatch(Character::isDigit)) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Age between 20-65");
            return;
        }

        //Gender validation
        inputValidation = txtGender.getText().trim();
        if (inputValidation.length() < 2 || !inputValidation.chars().allMatch(Character::isLetter)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid gender either Male or Female");
            return;
        }

        //Start Date validation
        if (!isValidDate(txtStartDate.getText())) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Date in dd/MM/yyyy");
            return;
        }

        //Level validation
        inputValidation = txtLevel.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.length() <= 2 || !inputValidation.chars().allMatch(Character::isLetter)) {

            JOptionPane.showMessageDialog(this, "Please Enter Valid Level");
            return;
        }

        //Team Info validation
        inputValidation = txtTeamInfo.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.length() <= 2 || !inputValidation.chars().allMatch(Character::isLetter)) {

            JOptionPane.showMessageDialog(this, "Please Enter Valid Team Info");
            return;
        }

        //PositionTitle
        inputValidation = txtPositionTitle.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.length() <= 2 || !inputValidation.chars().allMatch(Character::isLetter)) {

            JOptionPane.showMessageDialog(this, "Please Enter Valid Position Title");
            return;
        }

        //PhoneNo
        inputValidation = txtPhoneNo.getText().trim();
        if (inputValidation.isEmpty() || inputValidation.length() != 10 || !inputValidation.chars().allMatch(Character::isDigit)) {

            JOptionPane.showMessageDialog(this, "Please enter a valid phone no");
            return;
        }

        //Email Address
        inputValidation = txtEmailAddress.getText().trim();
        if (!emailAddressValidation(inputValidation)) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address");
            return;
        }

        //Photo
        if (empProfile.getPhoto() == null) {
            JOptionPane.showMessageDialog(this, "Please upload a photo");
            return;
        }
        profile = empProfileHistory.addNewRecords();
        profile.setEmailAddress(txtEmailAddress.getText());
        txtEmailAddress.setText("");
        profile.setEmp_cellPhoneNo(txtPhoneNo.getText());
        txtPhoneNo.setText("");
        profile.setEmp_positionTitle(txtPositionTitle.getText());
        txtPositionTitle.setText("");
        profile.setEmp_level(txtLevel.getText());
        txtLevel.setText("");
        profile.setEmp_teamInfo(txtTeamInfo.getText());
        txtTeamInfo.setText("");
        profile.setEmp_startDate(txtStartDate.getText());
        txtStartDate.setText("");
        profile.setGender(txtGender.getText());
        txtGender.setText("");
        profile.setAge(Integer.parseInt(txtAge.getText()));
        txtAge.setText("");
        profile.setEmpId(Integer.parseInt(txtEmpID.getText()) == Integer.parseInt("0") ? null : Integer.parseInt(txtEmpID.getText()));
        txtEmpID.setText("");
        profile.setEmpName(txtEmpName.getText());
        txtEmpName.setText("");
     
        flag = 1;
        JOptionPane.showMessageDialog(this, "New Employee Added");

        if (flag == 0) {
            JOptionPane.showMessageDialog(this, "Please add Employee Details");
            return;
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUploadPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadPhotoActionPerformed
        //Photo upload
        JFileChooser uploadPhoto = new JFileChooser();
        FileNameExtensionFilter fileExtension = new FileNameExtensionFilter("*.images", "jpg", "jpeg", "png");
        uploadPhoto.addChoosableFileFilter(fileExtension);
        int selectPhoto = uploadPhoto.showOpenDialog(null);
        if (selectPhoto == JFileChooser.APPROVE_OPTION) {
            File imageUploaded = uploadPhoto.getSelectedFile();
            String imagePath = imageUploaded.getAbsolutePath();
            JOptionPane.showMessageDialog(null, "Photo uploaded Successfully.");
            ImageIcon imageIcon = new ImageIcon(imagePath);
            Image imageDetails = imageIcon.getImage().getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(), Image.SCALE_SMOOTH);
            empProfile.setPhoto(imagePath);
            lblPhoto.setIcon(new ImageIcon(empProfile.getPhoto()));
        }
    }//GEN-LAST:event_btnUploadPhotoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUploadPhoto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCreateTitle;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblPhoneNo;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

    //Validate Email address
    private boolean emailAddressValidation(String email) {
        String emailValidation = "^[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        Pattern pattern = Pattern.compile(emailValidation);
        Matcher m = pattern.matcher(email);
        return m.matches();
    }

    //Validate Date
    private boolean isValidDate(String date) {
        boolean isValidDate;
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        dateFormat.setLenient(false);
        try {
            dateFormat.parse(date);
            isValidDate = true;
        } catch (ParseException e) {
            isValidDate = false;
        }
        return isValidDate;
    }
}
